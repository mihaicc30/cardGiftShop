<script src="https://unpkg.com/leaflet-control-geocoder/dist/Control.Geocoder.js"></script>

<%- include('./partials/header') %>

    <%- include ('./partials/messages') %>


        <div id="map" style="height:80vh; width: 80vw;margin-top: 6vh;"></div>



        <script>
            /*===================================================
                              OSM  LAYER               
            ===================================================*/
            var map = L.map('map')

            var osm = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            });
            osm.addTo(map);


            /*===================================================
                                  MARKERS               
            ===================================================*/
            var baseIcon = L.Icon.extend({
                options: {
                    iconUrl: "./img/icon1.png", iconSize: [15, 25], iconAnchor: [5, 5], popupAnchor: [5, -5]
                }
            })

            var starIcon = new baseIcon({ iconUrl: "./img/icon1.png" })
            var startIcon = new baseIcon({ iconUrl: "./img/start.png" })
            var endIcon = new baseIcon({ iconUrl: "./img/end.png" })

            var marker = L.marker([51.850998, -2.268142], { icon: starIcon, alt: "Home" }).bindPopup("home").openPopup() // for accesability
            var marker2 = L.marker([51.85144, -2.26681], { icon: starIcon, alt: "Home" })

            var circle = L.circle([51.85344, -2.26381], { color: 'red', fillColor: '#f03', fillOpacity: 0.5, radius: 100 })

            var polygon = L.polygon([[51.8539, -2.2628], [51.8512, -2.2643], [51.8527, -2.26]])

            var markz = L.layerGroup([marker, marker2]).addTo(map);
            var circlz = L.layerGroup([circle]).addTo(map);
            var polygonz = L.layerGroup([polygon]).addTo(map);
            /*===================================================
                                   GPS              
            ===================================================*/
            map.locate({ setView: true, maxZoom: 19 });
            function onLocationFound(e) {
                var radius = e.accuracy;

                var gps1 = L.marker(e.latlng).addTo(map)
                    .bindPopup("You are within " + radius).openPopup();

                var gps2 = L.circle(e.latlng, radius).addTo(map);

            }
            function onLocationError(e) {
                alert(e.message);
            }
            map.on('locationerror', onLocationError);
            map.on('locationfound', onLocationFound);

            /*===================================================
                        TILE LAYER               
            ===================================================*/
            L.control.scale({ metric: true, imperial: false, position: 'bottomleft' }).addTo(map) // scale

            googleStreets = L.tileLayer('http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}', {
                maxZoom: 19,
                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
            });
            googleStreets.addTo(map);

            // Satelite Layer
            googleSat = L.tileLayer('http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}', {
                maxZoom: 19,
                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
            });
            googleSat.addTo(map);

            googleTraffic = L.tileLayer('http://{s}.google.com/vt/lyrs=m@221097413,traffic&x={x}&y={y}&z={z}', {
                maxZoom: 19,
                subdomains: ['mt0', 'mt1', 'mt2', 'mt3']
            });
            googleTraffic.addTo(map);

            /*===================================================
                      LAYER CONTROL               
            ===================================================*/

            var baseLayers = {
                "Satellite": googleSat,
                "GoogleMap": googleStreets,
                "OpenStreetMap": osm,
                "Traffic": googleTraffic,
            };

            var overlays = {
                "Marker": markz,
                "Circle": circlz,
                "Polygon": polygonz
            };

            L.control.layers(baseLayers, overlays, { position: 'bottomright' }).addTo(map);

            /*===================================================
                        SEARCH BUTTON               
            ===================================================*/
            var geocoder = L.Control.geocoder({
                defaultMarkGeocode: false,
                geocoder
            })
                .on('markgeocode', function (e) {
                    var bbox = e.geocode.bbox;
                    var poly = L.polygon([
                        bbox.getSouthEast(),
                        bbox.getNorthEast(),
                        bbox.getNorthWest(),
                        bbox.getSouthWest()
                    ]).addTo(map);
                    console.log(e);
                    map.fitBounds(e.geocode.bbox);
                })
                .addTo(map);

            // L.Class.extend({
            //     options: {
            //         steps: true,
            //     }
            // })
            /*===================================================
                        ROUTING       https://www.liedman.net/leaflet-routing-machine/
            ===================================================*/
            wayPoint1 = L.latLng(51.854178, -2.261504)
            wayPoint2 = L.latLng(51.856512, -2.239964)
            // var wayPoint1 = L.latLng(51.854178, -2.261504)
            // var wayPoint2 = L.latLng(51.856512, -2.239964)
            // var bounds = L.latLngBounds(wayPoint1, wayPoint2);

            // var routeControl = L.Routing.control({
            // }).addTo(map);
            var rout = L.Routing.control({
                "mode": "driving",
                "driving_side": "right",
                waypoints: [
                    wayPoint1 = L.latLng(51.854178, -2.261504),
                    wayPoint2 = L.latLng(51.856512, -2.239964)
                ],
                show: true, // to put a button
                units: 'imperial',
                autoRoute: true,
                collapsible: true,
                routeWhileDragging: true,
                lineOptions: { styles: [{ color: 'blue', opacity: 0.7, weight: 5 }] },
                geocoder: L.Control.Geocoder.nominatim({ geocodingQueryParams: { 'limit': '5' }, 'postcode': { dataset: 'DPA,LPI' } }),
                showAlternatives: true,
                altLineOptions: { styles: [{ color: 'grey', opacity: 0.8, weight: 5 }, { color: 'grey', opacity: 0.8, weight: 5 }] }
            }).addTo(map)
            var bounds = L.latLngBounds(wayPoint1, wayPoint2);
            map.fitBounds(bounds)

            // console.log(rout.options.waypoints[0], rout.options.waypoints[1]);
            //popup
            var popup = L.popup();

            function onMapClick(e) {
                L.popup()
                    .setLatLng(e.latlng)
                    .setContent("<p contentEditable='true' id='wpz'>You clicked the map at <br>" + e.latlng.toString() + "</p><br>" +
                        `<button type='button' class='p-2 mr-1' onclick='addWP1(${e.latlng.lat}, ${e.latlng.lng})'>Add From</button><button class='p-2' type='button' onclick='addWP2(${e.latlng.lat}, ${e.latlng.lng})'>Add To</button>`)
                    .openOn(map);
            }

            map.on('click', onMapClick);

            var fromHere
            var toHere
            function addWP1(param1, param2) {

                var imgz = document.getElementsByTagName('img')
                for(i=0;i<document.getElementsByTagName('img').length;i++){
                    if(imgz[i].alt == "fromHere") { imgz[i].remove() }
                }
                rout.options.waypoints[0].lat, rout.options.waypoints[0].lng = param2, param1
                 fromHere = L.marker([param1, param2], { icon: startIcon, alt: "fromHere" }).addTo(map).bindPopup("from location").openPopup();

            }

            function addWP2(param1, param2) {
                
                var imgz = document.getElementsByTagName('img')
                for(i=0;i<document.getElementsByTagName('img').length;i++){
                    if(imgz[i].alt == "toHere") { imgz[i].remove() }
                }

                rout.options.waypoints[1].lat, rout.options.waypoints[1].lng = param2, param1
                 toHere = L.marker([param1, param2], { icon: endIcon,alt: "toHere" }).addTo(map).bindPopup("to location").openPopup();
            }
        </script>